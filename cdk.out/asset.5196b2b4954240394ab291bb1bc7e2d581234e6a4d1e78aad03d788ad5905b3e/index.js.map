{
  "version": 3,
  "sources": ["../asset-input/src/functions/auth/manage-session/index.ts"],
  "sourcesContent": ["import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\n\ninterface CookieOptions {\n    httpOnly?: boolean;\n    secure?: boolean;\n    sameSite?: 'strict' | 'lax' | 'none';\n    maxAge?: number;\n    domain?: string;\n    path?: string;\n}\n\n// Define CORS headers\nconst corsHeaders = {\n    'Access-Control-Allow-Origin': 'https://www.asaracing.live',\n    'Access-Control-Allow-Methods': 'OPTIONS,POST,GET',\n    'Access-Control-Allow-Headers': 'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Origin,Accept,Referer',\n    'Access-Control-Allow-Credentials': 'true'\n};\n\nexport const handler = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResult> => {\n    // Handle OPTIONS request\n    if (event.httpMethod === 'OPTIONS') {\n        return {\n            statusCode: 200,\n            headers: corsHeaders,\n            body: ''\n        };\n    }\n\n    try {\n        // Handle verify request (GET)\n        if (event.resource === '/auth/manage-session/verify') {\n            const cookies = event.headers.Cookie || event.headers.cookie;\n            return {\n                statusCode: 200,\n                headers: corsHeaders,\n                body: JSON.stringify({\n                    cookiesPresent: !!cookies,\n                    cookies: cookies ? parseCookies(cookies) : null\n                })\n            };\n        }\n\n        // Handle session creation (POST)\n        if (!event.body) {\n            return {\n                statusCode: 400,\n                headers: corsHeaders,\n                body: JSON.stringify({ message: 'Missing request body' })\n            };\n        }\n\n        const { accessToken, idToken } = JSON.parse(event.body);\n        if (!accessToken || !idToken) {\n            return {\n                statusCode: 400,\n                headers: corsHeaders,\n                body: JSON.stringify({ message: 'Missing required tokens' })\n            };\n        }\n\n        // Set cookies\n        return {\n            statusCode: 200,\n            headers: {\n                ...corsHeaders,\n                'Set-Cookie': [\n                    `accessToken=${accessToken}; HttpOnly; Secure; Path=/; SameSite=None; Max-Age=3600`,\n                    `idToken=${idToken}; HttpOnly; Secure; Path=/; SameSite=None; Max-Age=3600`\n                ].join('; ')\n            },\n            body: JSON.stringify({ success: true })\n        };\n\n    } catch (error) {\n        console.error('Error:', error);\n        return {\n            statusCode: 500,\n            headers: corsHeaders,\n            body: JSON.stringify({ message: 'Internal server error' })\n        };\n    }\n};\n\nfunction parseCookies(cookieString: string) {\n    return cookieString.split(';')\n        .map(cookie => cookie.trim())\n        .reduce((acc, cookie) => {\n            const [key, value] = cookie.split('=');\n            acc[key] = value;\n            return acc;\n        }, {} as Record<string, string>);\n}"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAYA,IAAMI,EAAc,CAChB,8BAA+B,6BAC/B,+BAAgC,mBAChC,+BAAgC,6FAChC,mCAAoC,MACxC,EAEaF,EAAU,MAAOG,GAAgE,CAE1F,GAAIA,EAAM,aAAe,UACrB,MAAO,CACH,WAAY,IACZ,QAASD,EACT,KAAM,EACV,EAGJ,GAAI,CAEA,GAAIC,EAAM,WAAa,8BAA+B,CAClD,IAAMC,EAAUD,EAAM,QAAQ,QAAUA,EAAM,QAAQ,OACtD,MAAO,CACH,WAAY,IACZ,QAASD,EACT,KAAM,KAAK,UAAU,CACjB,eAAgB,CAAC,CAACE,EAClB,QAASA,EAAUC,EAAaD,CAAO,EAAI,IAC/C,CAAC,CACL,CACJ,CAGA,GAAI,CAACD,EAAM,KACP,MAAO,CACH,WAAY,IACZ,QAASD,EACT,KAAM,KAAK,UAAU,CAAE,QAAS,sBAAuB,CAAC,CAC5D,EAGJ,GAAM,CAAE,YAAAI,EAAa,QAAAC,CAAQ,EAAI,KAAK,MAAMJ,EAAM,IAAI,EACtD,MAAI,CAACG,GAAe,CAACC,EACV,CACH,WAAY,IACZ,QAASL,EACT,KAAM,KAAK,UAAU,CAAE,QAAS,yBAA0B,CAAC,CAC/D,EAIG,CACH,WAAY,IACZ,QAAS,CACL,GAAGA,EACH,aAAc,CACV,eAAeI,CAAW,0DAC1B,WAAWC,CAAO,yDACtB,EAAE,KAAK,IAAI,CACf,EACA,KAAM,KAAK,UAAU,CAAE,QAAS,EAAK,CAAC,CAC1C,CAEJ,OAASC,EAAO,CACZ,eAAQ,MAAM,SAAUA,CAAK,EACtB,CACH,WAAY,IACZ,QAASN,EACT,KAAM,KAAK,UAAU,CAAE,QAAS,uBAAwB,CAAC,CAC7D,CACJ,CACJ,EAEA,SAASG,EAAaI,EAAsB,CACxC,OAAOA,EAAa,MAAM,GAAG,EACxB,IAAIC,GAAUA,EAAO,KAAK,CAAC,EAC3B,OAAO,CAACC,EAAKD,IAAW,CACrB,GAAM,CAACE,EAAKC,CAAK,EAAIH,EAAO,MAAM,GAAG,EACrC,OAAAC,EAAIC,CAAG,EAAIC,EACJF,CACX,EAAG,CAAC,CAA2B,CACvC",
  "names": ["manage_session_exports", "__export", "handler", "__toCommonJS", "corsHeaders", "event", "cookies", "parseCookies", "accessToken", "idToken", "error", "cookieString", "cookie", "acc", "key", "value"]
}
