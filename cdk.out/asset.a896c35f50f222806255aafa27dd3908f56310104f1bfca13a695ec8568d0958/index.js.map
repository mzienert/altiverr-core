{
  "version": 3,
  "sources": ["../asset-input/src/functions/auth/manage-session/index.ts"],
  "sourcesContent": ["import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\n\ninterface CookieOptions {\n    httpOnly?: boolean;\n    secure?: boolean;\n    sameSite?: 'strict' | 'lax' | 'none';\n    maxAge?: number;\n    domain?: string;\n    path?: string;\n}\n\ntype APIGatewayProxyResultWithMultiValueHeaders = Omit<APIGatewayProxyResult, 'headers'> & {\n    multiValueHeaders?: { [header: string]: string[] };\n    headers: { [header: string]: string | number | boolean | string[] };\n};\n\nexport const handler = async (event: APIGatewayProxyEvent): Promise<APIGatewayProxyResultWithMultiValueHeaders> => {\n    const allowedOrigins = ['https://www.asaracing.live', 'http://localhost:3000'];\n    const origin = event.headers.origin || 'https://www.asaracing.live';\n    \n    const corsHeaders = {\n        'Access-Control-Allow-Origin': allowedOrigins.includes(origin) ? origin : 'https://www.asaracing.live',\n        'Access-Control-Allow-Credentials': 'true',\n        'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type,Authorization,Cookie'\n    };\n\n    // Handle OPTIONS preflight request\n    if (event.httpMethod === 'OPTIONS') {\n        return {\n            statusCode: 200,\n            headers: corsHeaders,\n            body: ''\n        };\n    }\n\n    // Handle POST request for session creation\n    if (event.httpMethod === 'POST') {\n        const { accessToken, idToken } = JSON.parse(event.body || '{}');\n        \n        if (!accessToken || !idToken) {\n            return {\n                statusCode: 400,\n                headers: corsHeaders,\n                body: JSON.stringify({ message: 'Missing required tokens' })\n            };\n        }\n\n        return {\n            statusCode: 200,\n            headers: corsHeaders,\n            multiValueHeaders: {\n                'Set-Cookie': [\n                    `accessToken=${accessToken}; Path=/; HttpOnly; Secure; SameSite=None`,\n                    `idToken=${idToken}; Path=/; HttpOnly; Secure; SameSite=None`\n                ]\n            },\n            body: JSON.stringify({ success: true })\n        };\n    }\n\n    // Handle verify request (GET)\n    if (event.httpMethod === 'GET') {\n        const cookies = event.headers.Cookie || event.headers.cookie;\n        console.log('Cookies received:', cookies);\n        \n        if (!cookies) {\n            return {\n                statusCode: 401,\n                headers: corsHeaders,\n                body: JSON.stringify({ message: 'No access token found' })\n            };\n        }\n\n        return {\n            statusCode: 200,\n            headers: corsHeaders,\n            body: JSON.stringify({ valid: true })\n        };\n    }\n\n    return {\n        statusCode: 404,\n        headers: corsHeaders,\n        body: JSON.stringify({ message: 'Not found' })\n    };\n};\n\nfunction parseCookies(cookieString: string) {\n    return cookieString.split(';')\n        .map(cookie => cookie.trim())\n        .reduce((acc, cookie) => {\n            const [key, value] = cookie.split('=');\n            acc[key] = value;\n            return acc;\n        }, {} as Record<string, string>);\n}"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAgBO,IAAME,EAAU,MAAOE,GAAqF,CAC/G,IAAMC,EAAiB,CAAC,6BAA8B,uBAAuB,EACvEC,EAASF,EAAM,QAAQ,QAAU,6BAEjCG,EAAc,CAChB,8BAA+BF,EAAe,SAASC,CAAM,EAAIA,EAAS,6BAC1E,mCAAoC,OACpC,+BAAgC,mBAChC,+BAAgC,mCACpC,EAGA,GAAIF,EAAM,aAAe,UACrB,MAAO,CACH,WAAY,IACZ,QAASG,EACT,KAAM,EACV,EAIJ,GAAIH,EAAM,aAAe,OAAQ,CAC7B,GAAM,CAAE,YAAAI,EAAa,QAAAC,CAAQ,EAAI,KAAK,MAAML,EAAM,MAAQ,IAAI,EAE9D,MAAI,CAACI,GAAe,CAACC,EACV,CACH,WAAY,IACZ,QAASF,EACT,KAAM,KAAK,UAAU,CAAE,QAAS,yBAA0B,CAAC,CAC/D,EAGG,CACH,WAAY,IACZ,QAASA,EACT,kBAAmB,CACf,aAAc,CACV,eAAeC,CAAW,4CAC1B,WAAWC,CAAO,2CACtB,CACJ,EACA,KAAM,KAAK,UAAU,CAAE,QAAS,EAAK,CAAC,CAC1C,CACJ,CAGA,GAAIL,EAAM,aAAe,MAAO,CAC5B,IAAMM,EAAUN,EAAM,QAAQ,QAAUA,EAAM,QAAQ,OAGtD,OAFA,QAAQ,IAAI,oBAAqBM,CAAO,EAEnCA,EAQE,CACH,WAAY,IACZ,QAASH,EACT,KAAM,KAAK,UAAU,CAAE,MAAO,EAAK,CAAC,CACxC,EAXW,CACH,WAAY,IACZ,QAASA,EACT,KAAM,KAAK,UAAU,CAAE,QAAS,uBAAwB,CAAC,CAC7D,CAQR,CAEA,MAAO,CACH,WAAY,IACZ,QAASA,EACT,KAAM,KAAK,UAAU,CAAE,QAAS,WAAY,CAAC,CACjD,CACJ",
  "names": ["manage_session_exports", "__export", "handler", "__toCommonJS", "event", "allowedOrigins", "origin", "corsHeaders", "accessToken", "idToken", "cookies"]
}
